[project]
name = "pose-evaluation"
description = "Automatic Evaluation for Pose Files"
version = "0.0.1"
authors = [
    { name = "Zifan Jiang", email = "zifan.jiang@uzh.ch" },
    { name = "Colin Leong", email = "cleong1@udayton.edu" },
    { name = "Amit Moryossef", email = "amitmoryossef@gmail.com" },
]
readme = "README.md"
dependencies = [
    "pose-format",
    "scipy",
    "torch",
    "numpy",       # possibly could replace all with torch
    # for various vector/tensor similarities and distances in torch
    "sentence-transformers",
    # For reading .csv files, etc
    "pandas",
    # For segment similarity
    "sign_language_segmentation @ git+https://github.com/sign-language-processing/segmentation",
    "fastdtw",
    # alternative to fastdtw
    "dtaidistance",
    # so that we can have the "trim_pose" preprocessor
    "spoken-to-signed @ git+https://github.com/ZurichNLP/spoken-to-signed-translation.git",
    "typer",
    "torchmetrics",
    "kaleido", # for downloading figures
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pylint",
    "black",
    # to plot metric evaluation results
    "matplotlib",
    "pytest-cov",
    "coverage-lcov",
]

[tool.yapf]
based_on_style = "google"
column_limit = 120

[tool.pylint]
max-line-length = 120
disable = [
    "C0114", # Missing module docstring
    "C0115", # Missing class docstring
    "C0116", # Missing function or method docstring
    "W0511", # TODO
    "W1203", # use lazy % formatting in logging functions
    "R0913", # too-many-arguments
    "R0917", # too-many-positional-arguments
]

[tool.black]
line-length = 120

[tool.setuptools]
packages = ["pose_evaluation", "pose_evaluation.metrics"]

[tool.pytest.ini_options]
addopts = "-v --cov=pose_evaluation --cov-report=term --cov-report=xml --cov-report=lcov --cov-report=html"
testpaths = ["pose_evaluation"]

[tool.coverage.run]
omit = [
  "pose_evaluation/*/test_*.py",
  "pose_evaluation/*/conftest.py"
]



